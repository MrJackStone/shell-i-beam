
!!                                                                                                !!
!! 3.9   OBTER NÚMERO DOS NÓS DE RESULTADOS                                                       !!
!!                                                                                                !!

!! 3.9.1   DETERMINAR POSIÇÕES DE INTERESSE PARA EXTRAÇÃO DE RESULTADOS                           !!
!!                                                                                                !!
! Na direção X (longitudinal):
*del,RESULTS_XPos_Val
*dim,RESULTS_XPos_Val,ARRAY,3
RESULTS_XPos_Val(1)=VIGA_x0, VIGA_x0 + (VIGA_L/2), VIGA_x0 + VIGA_L
*del,RESULTS_XPos_ID
*dim,RESULTS_XPos_ID,CHAR,3
RESULTS_XPos_ID(1)='LS','MS','RS'

! Na direção Y (altura da alma):
*del,RESULTS_YPos_Val
*dim,RESULTS_YPos_Val,ARRAY,3
RESULTS_YPos_Val(1)=VIGA_y0, VIGA_y0 + yOpLine, VIGA_y0 + VIGA_dm
*del,RESULTS_YPos_ID
*dim,RESULTS_YPos_ID,CHAR,3
RESULTS_YPos_ID(1)='B','M','T'

! Definir graus de liberdade de interesse para extração de resultados
*del,RESULTS_DOF_ID
*dim,RESULTS_DOF_ID,CHAR,4
RESULTS_DOF_ID(1)='UX','UY','UZ','RZ'

!! 3.9.2   INCREMENTAR VETORES EM FUNÇÃO DOS CARREGAMENTOS APLICADOS                              !!
!!                                                                                                !!
! Obter o número de carregamentos aplicados
CompWidth=(2*LoadType1)+(3*LoadType2)+(LoadType3)
! Obter a dimensão do vetor de posições em X
*get,xCount,PARM,RESULTS_XPos_Val,DIM,1

! Caso haja carregamentos tipo 1 e/ou 3:
*if,CompWidth,GT,0,THEN

   ! Incrementar o vetor de posições em X
   *vfun,TempArray,COPY,RESULTS_XPos_Val
   *del,RESULTS_XPos_Val
   *dim,RESULTS_XPos_Val,ARRAY,xCount+CompWidth
   *vfun,RESULTS_XPos_Val,COPY,TempArray
   freePosition=xCount+1
   *del,TempArray

   ! Incrementar o vetor de nomes
   *del,TempArray
   *dim,TempArray,CHAR,xCount
   *do,i,1,xCount
      TempArray(i)=RESULTS_XPos_ID(i)
   *enddo
   *del,RESULTS_XPos_ID
   *dim,RESULTS_XPos_ID,CHAR,xCount+CompWidth
   *do,i,1,xCount
      RESULTS_XPos_ID(i)=TempArray(i)
   *enddo
   *del,TempArray

   ! Preencher novas posições dos vetores de posição e nome
   ! Carregamento tipo 1 (flexão de quatro pontos)
   *if,LoadType1,EQ,1,THEN
      RESULTS_XPos_Val(freePosition)=LoadPos1
      RESULTS_XPos_Val(freePosition+1)=LoadPos2
      RESULTS_XPos_ID(freePosition)='FA'
      RESULTS_XPos_ID(freePosition+1)='FB'
      freePosition=freePosition+2
   *endif
   ! Carregamento tipo 3 (carga concentrada)
   *if,LoadType3,GE,1,THEN
      *do,nthPL,1,LoadType3,1
         Pos=PL_Pos(nthPL)
         Name=STRCAT('PL',CHRVAL(nthPL))
         RESULTS_XPos_Val(freePosition)=Pos
         RESULTS_XPos_ID(freePosition)=Name
         freePosition=freePosition+1
      *enddo
   *endif
   ! Carregamento tipo 2 (carga distribuída)
   *if,LoadType2,GE,1,THEN
      *do,nthDL,1,LoadType2,1
         PosBeg=DL_PosBeg(nthDL)
         PosEnd=DL_PosEnd(nthDL)
         PosCen=(PosEnd+PosBeg)/2
         NameBeg=STRCAT('DLb',CHRVAL(nthDL))
         NameEnd=STRCAT('DLe',CHRVAL(nthDL))
         NameCen=STRCAT('DLc',CHRVAL(nthDL))
         RESULTS_XPos_Val(freePosition)=PosBeg
         RESULTS_XPos_ID(freePosition)=NameBeg
         freePosition=freePosition+1
         RESULTS_XPos_Val(freePosition)=PosCen
         RESULTS_XPos_ID(freePosition)=NameCen
         freePosition=freePosition+1
         RESULTS_XPos_Val(freePosition)=PosEnd
         RESULTS_XPos_ID(freePosition)=NameEnd
         freePosition=freePosition+1
      *enddo
   *endif

*endif

!! 3.9.3   PREENCHER VETOR COM NÚMEROS DOS NÓS                                                    !!
!!                                                                                                !!
! Número de posições em X
xCount=xCount+CompWidth
! Número de posições em Y
*get,yCount,PARM,RESULTS_YPos_Val,DIM,1
! Número de graus de liberdade por nó
*get,DOFCount,PARM,RESULTS_DOF_ID,DIM,1

! Número total de nós
ResNodeTotal=xCount*yCount
! Inicializar vetor de nós
*del,ResultsNodes
*dim,ResultsNodes,ARRAY,ResNodeTotal

! Inicializar o contador de nós
resNodeCounter=0
! Para cada posição em X:
*do,nthX,1,xCount,1
   ! Obter o valor da coordenada X
   xPos=RESULTS_XPos_Val(nthX)
   ! Para cada posição em Y:
   *do,nthY,1,yCount,1
      ! Obter o valor da coordenada Y
      yPos=RESULTS_YPos_Val(nthY)
      ! Incrementar o contador de nós
      resNodeCounter=resNodeCounter+1
      ! Obter número do nó na posição de interesse
      ALLSEL
      NSEL,R,LOC,Y,yPos
      NSEL,R,LOC,Z,VIGA_z0
      nthNode=NODE(xPos,yPos,VIGA_z0)
      ! Adicionar número do nó ao vetor de nós
      ResultsNodes(resNodeCounter)=nthNode
   *enddo
*enddo
ALLSEL

!! 3.9.4   NÓS DO EIXO DA MESA INFERIOR                                                           !!
!!                                                                                                !!
! Selecionar nós
NSEL,S,LOC,Y,VIGA_y0
NSEL,R,LOC,Z,VIGA_z0
ESEL,S,TYPE,,TYPE_SHELL181
NSLE,R
CM,COMPN_BotFlangeCenter,NODE
! Nó inicial
NSEL,R,LOC,X,VIGA_x0
*get,FirstNode,NODE,,NUM,MIN
! Criar vetor de nós
CMSEL,S,COMPN_BotFlangeCenter
NDSTR,FirstNode
*del,NODES_BotFlangeCenter
*vfun,NODES_BotFlangeCenter,COPY,NDSTR_ARR_NodeList

!! 3.9.5   NÓS DO EIXO DA MESA SUPERIOR                                                           !!
!!                                                                                                !!
! Selecionar nós
NSEL,S,LOC,Y,VIGA_y0+VIGA_dm
NSEL,R,LOC,Z,VIGA_z0
ESEL,S,TYPE,,TYPE_SHELL181
NSLE,R
CM,COMPN_TopFlangeCenter,NODE
! Nó inicial
NSEL,R,LOC,X,VIGA_x0
*get,FirstNode,NODE,,NUM,MIN
! Criar vetor de nós
CMSEL,S,COMPN_TopFlangeCenter
NDSTR,FirstNode
*del,NODES_TopFlangeCenter
*vfun,NODES_TopFlangeCenter,COPY,NDSTR_ARR_NodeList


